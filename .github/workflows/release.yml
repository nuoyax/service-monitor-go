name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build All Platforms
    strategy:
      matrix:
        include:
          - name: Windows
            goos: windows
            goarch: amd64
            runner: windows-latest
          - name: Debian
            goos: linux
            goarch: amd64
            runner: ubuntu-latest
            pkg: deb
          - name: RHEL
            goos: linux
            goarch: amd64
            runner: ubuntu-latest
            pkg: rpm

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Binary
        run: |
          echo "Current tag: ${{ github.ref_name }}"
          BIN_NAME="service-monitor-${{ github.ref_name }}-${{ matrix.name }}"
          if [ "${{ matrix.goos }}" == "windows" ]; then
            BIN_NAME="${BIN_NAME}.exe"
          fi
          mkdir -p ./bin
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ./bin/$BIN_NAME ./cmd/main.go
          # Linux打包
          if [ "${{ matrix.pkg }}" == "deb" ]; then
            tar czf ./bin/${BIN_NAME}.tar.gz -C ./bin $(basename $BIN_NAME)
          elif [ "${{ matrix.pkg }}" == "rpm" ]; then
            tar czf ./bin/${BIN_NAME}.tar.gz -C ./bin $(basename $BIN_NAME)
          fi

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./bin/service-monitor-${{ github.ref_name }}-${{ matrix.name }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
